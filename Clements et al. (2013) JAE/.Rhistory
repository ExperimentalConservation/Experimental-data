library(reshape2)
library(ggplot2)
library(gganimate)
library(gifski)
library(png)
library(transformr)
LotVmod <- function (Time, State, Pars) {
with(as.list(c(State, Pars)), {
dx = x*(alpha - beta*y)
dy = -y*(gamma - delta*x)
return(list(c(dx, dy)))
})
}
Pars <- c(alpha = 1.01, beta = .1, gamma = .2, delta = .1)
State <- c(x = 10, y = 10)
Time <- seq(0, 100, by = 0.01)
out <- as.data.frame(ode(func = LotVmod, y = State, parms = Pars, times = Time))
names(out)[2:3]<-c("Hare", "Lynx")
melt.out<-melt(out, id=1)
names(melt.out)[2]<-"Species"
rm(list=ls())
library(deSolve)
library(reshape2)
library(ggplot2)
library(gganimate)
library(gifski)
library(png)
library(transformr)
theme_black = function(base_size = 12, base_family = "") {
theme_grey(base_size = base_size, base_family = base_family) %+replace%
theme(
# Specify axis options
axis.line = element_blank(),
axis.text.x = element_text(size = base_size*0.8, color = "white", lineheight = 0.9),
axis.text.y = element_text(size = base_size*0.8, color = "white", lineheight = 0.9),
axis.ticks = element_line(color = "white", size  =  0.2),
axis.title.x = element_text(size = base_size, color = "white", margin = margin(0, 10, 0, 0)),
axis.title.y = element_text(size = base_size, color = "white", angle = 90, margin = margin(0, 10, 0, 0)),
axis.ticks.length = unit(0.3, "lines"),
# Specify legend options
legend.background = element_rect(color = NA, fill = "black"),
legend.key = element_rect(color = "white",  fill = "black"),
legend.key.size = unit(1.2, "lines"),
legend.key.height = NULL,
legend.key.width = NULL,
legend.text = element_text(size = base_size*0.8, color = "white"),
legend.title = element_text(size = base_size*0.8, face = "bold", hjust = 0, color = "white"),
legend.position = "right",
legend.text.align = NULL,
legend.title.align = NULL,
legend.direction = "vertical",
legend.box = NULL,
# Specify panel options
panel.background = element_rect(fill = "black", color  =  NA),
panel.border = element_rect(fill = NA, color = "white"),
panel.grid.major = element_line(color = "grey35"),
panel.grid.minor = element_line(color = "grey20"),
panel.spacing = unit(0.5, "lines"),
# Specify facetting options
strip.background = element_rect(fill = "grey30", color = "grey10"),
strip.text.x = element_text(size = base_size*0.8, color = "white"),
strip.text.y = element_text(size = base_size*0.8, color = "white",angle = -90),
# Specify plot options
plot.background = element_rect(color = "black", fill = "black"),
plot.title = element_text(size = base_size*1.2, color = "white"),
plot.margin = unit(rep(1, 4), "lines")
)
}
LotVmod <- function (Time, State, Pars) {
with(as.list(c(State, Pars)), {
dx = x*(alpha - beta*y)
dy = -y*(gamma - delta*x)
return(list(c(dx, dy)))
})
}
Pars <- c(alpha = 1.01, beta = .1, gamma = .2, delta = .1)
State <- c(x = 10, y = 10)
Time <- seq(0, 100, by = 0.01)
out <- as.data.frame(ode(func = LotVmod, y = State, parms = Pars, times = Time))
names(out)[2:3]<-c("Hare", "Lynx")
melt.out<-melt(out, id=1)
names(melt.out)[2]<-"Species"
p <- ggplot(melt.out, aes(x=time, y=value, group=Species, col=Species)) + scale_color_viridis_d() +
geom_line() + geom_point()+theme_minimal() +theme(legend.position="top")+xlab("Time")+ylab("Abundance")+
# Here comes the gganimate code
transition_reveal(time) +
enter_fade() +
exit_shrink() +
ease_aes('sine-in-out') +theme_black()
anim<-animate(p, fps=15, height = 3000, width =8000,  res = 200)
anim_save("~/OneDrive - University of Bristol/Ecology/Chris' videos/R simlations and plots/LV Gif.gif", anim)
rm(list=ls())
library(deSolve)
library(reshape2)
library(ggplot2)
library(gganimate)
library(gifski)
library(png)
library(transformr)
library(gridExtra)
library(wesanderson)
pal <- wes_palette("Darjeeling1", 5, type = "discrete")[c(3,5)]
theme_black = function(base_size = 12, base_family = "") {
theme_grey(base_size = base_size, base_family = base_family) %+replace%
theme(
# Specify axis options
axis.line = element_blank(),
axis.text.x = element_text(size = base_size*0.8, color = "white", lineheight = 0.9),
axis.text.y = element_text(size = base_size*0.8, color = "white", lineheight = 0.9),
axis.ticks = element_line(color = "white", size  =  0.2),
axis.title.x = element_text(size = base_size, color = "white", margin = margin(0, 10, 0, 0)),
axis.title.y = element_text(size = base_size, color = "white", angle = 90, margin = margin(0, 10, 0, 0)),
axis.ticks.length = unit(0.3, "lines"),
# Specify legend options
legend.background = element_rect(color = NA, fill = "black"),
legend.key = element_rect(color = "white",  fill = "black"),
legend.key.size = unit(1.2, "lines"),
legend.key.height = NULL,
legend.key.width = NULL,
legend.text = element_text(size = base_size*0.8, color = "white"),
legend.title = element_text(size = base_size*0.8, face = "bold", hjust = 0, color = "white"),
legend.position = "right",
legend.text.align = NULL,
legend.title.align = NULL,
legend.direction = "vertical",
legend.box = NULL,
# Specify panel options
panel.background = element_rect(fill = "black", color  =  NA),
panel.border = element_rect(fill = NA, color = "white"),
panel.grid.major = element_line(color = "grey35"),
panel.grid.minor = element_line(color = "grey20"),
panel.spacing = unit(0.5, "lines"),
# Specify facetting options
strip.background = element_rect(fill = "grey30", color = "grey10"),
strip.text.x = element_text(size = base_size*0.8, color = "white"),
strip.text.y = element_text(size = base_size*0.8, color = "white",angle = -90),
# Specify plot options
plot.background = element_rect(color = "black", fill = "black"),
plot.title = element_text(size = base_size*1.2, color = "white"),
plot.margin = unit(rep(1, 4), "lines")
)
}
LotVmod <- function (Time, State, Pars) {
with(as.list(c(State, Pars)), {
dx = x*(alpha - beta*y)
dy = -y*(gamma - delta*x)
return(list(c(dx, dy)))
})
}
Pars <- c(alpha = 1.01, beta = .1, gamma = .2, delta = .01)
State <- c(x = 10, y = 10)
Time <- seq(0, 100, by = 0.01)
out <- as.data.frame(ode(func = LotVmod, y = State, parms = Pars, times = Time))
names(out)[2:3]<-c("Hare", "Lynx")
melt.out<-melt(out, id=1)
names(melt.out)[2]<-"Species"
p <- ggplot(melt.out, aes(x=time, y=value, group=Species, col=Species)) +scale_color_manual(values = pal)+
geom_line() + geom_point()+theme_minimal() +theme(legend.position="top")+xlab("Time")+ylab("Abundance")+
# Here comes the gganimate code
transition_reveal(time) +
enter_fade() +
exit_shrink() +
ease_aes('sine-in-out') +theme_black()
anim<-animate(p, fps=15, height = 3000, width =8000,  res = 200)
anim_save("~/OneDrive - University of Bristol/Ecology/Chris' videos/R simlations and plots/LV Gif.gif", anim)
###then a second sim with different growth rates:
rm(list=ls())
library(deSolve)
library(reshape2)
library(ggplot2)
library(gganimate)
library(gifski)
library(png)
library(transformr)
library(gridExtra)
library(wesanderson)
theme_black = function(base_size = 12, base_family = "") {
theme_grey(base_size = base_size, base_family = base_family) %+replace%
theme(
# Specify axis options
axis.line = element_blank(),
axis.text.x = element_text(size = base_size*0.8, color = "white", lineheight = 0.9),
axis.text.y = element_text(size = base_size*0.8, color = "white", lineheight = 0.9),
axis.ticks = element_line(color = "white", size  =  0.2),
axis.title.x = element_text(size = base_size, color = "white", margin = margin(0, 10, 0, 0)),
axis.title.y = element_text(size = base_size, color = "white", angle = 90, margin = margin(0, 10, 0, 0)),
axis.ticks.length = unit(0.3, "lines"),
# Specify legend options
legend.background = element_rect(color = NA, fill = "black"),
legend.key = element_rect(color = "white",  fill = "black"),
legend.key.size = unit(1.2, "lines"),
legend.key.height = NULL,
legend.key.width = NULL,
legend.text = element_text(size = base_size*0.8, color = "white"),
legend.title = element_text(size = base_size*0.8, face = "bold", hjust = 0, color = "white"),
legend.position = "right",
legend.text.align = NULL,
legend.title.align = NULL,
legend.direction = "vertical",
legend.box = NULL,
# Specify panel options
panel.background = element_rect(fill = "black", color  =  NA),
panel.border = element_rect(fill = NA, color = "white"),
panel.grid.major = element_line(color = "grey35"),
panel.grid.minor = element_line(color = "grey20"),
panel.spacing = unit(0.5, "lines"),
# Specify facetting options
strip.background = element_rect(fill = "grey30", color = "grey10"),
strip.text.x = element_text(size = base_size*0.8, color = "white"),
strip.text.y = element_text(size = base_size*0.8, color = "white",angle = -90),
# Specify plot options
plot.background = element_rect(color = "black", fill = "black"),
plot.title = element_text(size = base_size*1.2, color = "white"),
plot.margin = unit(rep(1, 4), "lines")
)
}
LotVmod <- function (Time, State, Pars) {
with(as.list(c(State, Pars)), {
dx = x*(alpha - beta*y)
dy = -y*(gamma - delta*x)
return(list(c(dx, dy)))
})
}
Pars <- c(alpha = 1.01, beta = .1, gamma = .2, delta = .1)
State <- c(x = 10, y = 10)
Time <- seq(0, 100, by = 0.01)
out <- as.data.frame(ode(func = LotVmod, y = State, parms = Pars, times = Time))
names(out)[2:3]<-c("Hare", "Lynx")
melt.out<-melt(out, id=1)
names(melt.out)[2]<-"Species"
p <- ggplot(melt.out, aes(x=time, y=value, group=Species, col=Species)) + +scale_color_manual(values = pal) +
geom_line() + geom_point()+theme_minimal() +theme(legend.position="top")+xlab("Time")+ylab("Abundance")+
# Here comes the gganimate code
transition_reveal(time) +
enter_fade() +
exit_shrink() +
ease_aes('sine-in-out') +theme_black()
anim<-animate(p, fps=15, height = 3000, width =8000,  res = 200)
anim_save("~/OneDrive - University of Bristol/Ecology/Chris' videos/R simlations and plots/LV Gif slow.gif", anim)
pal <- wes_palette("Darjeeling1", 5, type = "discrete")[c(3,5)]
p <- ggplot(melt.out, aes(x=time, y=value, group=Species, col=Species)) + +scale_color_manual(values = pal) +
geom_line() + geom_point()+theme_minimal() +theme(legend.position="top")+xlab("Time")+ylab("Abundance")+
# Here comes the gganimate code
transition_reveal(time) +
enter_fade() +
exit_shrink() +
ease_aes('sine-in-out') +theme_black()
anim<-animate(p, fps=15, height = 3000, width =8000,  res = 200)
anim_save("~/OneDrive - University of Bristol/Ecology/Chris' videos/R simlations and plots/LV Gif slow.gif", anim)
rm(list=ls())
library(deSolve)
library(reshape2)
library(ggplot2)
library(gganimate)
library(gifski)
library(png)
library(transformr)
library(gridExtra)
library(wesanderson)
pal <- wes_palette("Darjeeling1", 5, type = "discrete")[c(3,5)]
theme_black = function(base_size = 12, base_family = "") {
theme_grey(base_size = base_size, base_family = base_family) %+replace%
theme(
# Specify axis options
axis.line = element_blank(),
axis.text.x = element_text(size = base_size*0.8, color = "white", lineheight = 0.9),
axis.text.y = element_text(size = base_size*0.8, color = "white", lineheight = 0.9),
axis.ticks = element_line(color = "white", size  =  0.2),
axis.title.x = element_text(size = base_size, color = "white", margin = margin(0, 10, 0, 0)),
axis.title.y = element_text(size = base_size, color = "white", angle = 90, margin = margin(0, 10, 0, 0)),
axis.ticks.length = unit(0.3, "lines"),
# Specify legend options
legend.background = element_rect(color = NA, fill = "black"),
legend.key = element_rect(color = "white",  fill = "black"),
legend.key.size = unit(1.2, "lines"),
legend.key.height = NULL,
legend.key.width = NULL,
legend.text = element_text(size = base_size*0.8, color = "white"),
legend.title = element_text(size = base_size*0.8, face = "bold", hjust = 0, color = "white"),
legend.position = "right",
legend.text.align = NULL,
legend.title.align = NULL,
legend.direction = "vertical",
legend.box = NULL,
# Specify panel options
panel.background = element_rect(fill = "black", color  =  NA),
panel.border = element_rect(fill = NA, color = "white"),
panel.grid.major = element_line(color = "grey35"),
panel.grid.minor = element_line(color = "grey20"),
panel.spacing = unit(0.5, "lines"),
# Specify facetting options
strip.background = element_rect(fill = "grey30", color = "grey10"),
strip.text.x = element_text(size = base_size*0.8, color = "white"),
strip.text.y = element_text(size = base_size*0.8, color = "white",angle = -90),
# Specify plot options
plot.background = element_rect(color = "black", fill = "black"),
plot.title = element_text(size = base_size*1.2, color = "white"),
plot.margin = unit(rep(1, 4), "lines")
)
}
LotVmod <- function (Time, State, Pars) {
with(as.list(c(State, Pars)), {
dx = x*(alpha - beta*y)
dy = -y*(gamma - delta*x)
return(list(c(dx, dy)))
})
}
Pars <- c(alpha = 1.01, beta = .1, gamma = .2, delta = .1)
State <- c(x = 10, y = 10)
Time <- seq(0, 100, by = 0.01)
out <- as.data.frame(ode(func = LotVmod, y = State, parms = Pars, times = Time))
names(out)[2:3]<-c("Hare", "Lynx")
melt.out<-melt(out, id=1)
names(melt.out)[2]<-"Species"
p <- ggplot(melt.out, aes(x=time, y=value, group=Species, col=Species)) + +scale_color_manual(values = pal) +
geom_line() + geom_point()+theme_minimal() +theme(legend.position="top")+xlab("Time")+ylab("Abundance")+
# Here comes the gganimate code
transition_reveal(time) +
enter_fade() +
exit_shrink() +
ease_aes('sine-in-out') +theme_black()
anim<-animate(p, fps=15, height = 3000, width =8000,  res = 200)
anim_save("~/OneDrive - University of Bristol/Ecology/Chris' videos/R simlations and plots/LV Gif slow.gif", anim)
rm(list=ls())
library(deSolve)
library(reshape2)
library(ggplot2)
library(gganimate)
library(gifski)
library(png)
library(transformr)
library(gridExtra)
library(wesanderson)
pal <- wes_palette("Darjeeling1", 5, type = "discrete")[c(3,5)]
theme_black = function(base_size = 12, base_family = "") {
theme_grey(base_size = base_size, base_family = base_family) %+replace%
theme(
# Specify axis options
axis.line = element_blank(),
axis.text.x = element_text(size = base_size*0.8, color = "white", lineheight = 0.9),
axis.text.y = element_text(size = base_size*0.8, color = "white", lineheight = 0.9),
axis.ticks = element_line(color = "white", size  =  0.2),
axis.title.x = element_text(size = base_size, color = "white", margin = margin(0, 10, 0, 0)),
axis.title.y = element_text(size = base_size, color = "white", angle = 90, margin = margin(0, 10, 0, 0)),
axis.ticks.length = unit(0.3, "lines"),
# Specify legend options
legend.background = element_rect(color = NA, fill = "black"),
legend.key = element_rect(color = "white",  fill = "black"),
legend.key.size = unit(1.2, "lines"),
legend.key.height = NULL,
legend.key.width = NULL,
legend.text = element_text(size = base_size*0.8, color = "white"),
legend.title = element_text(size = base_size*0.8, face = "bold", hjust = 0, color = "white"),
legend.position = "right",
legend.text.align = NULL,
legend.title.align = NULL,
legend.direction = "vertical",
legend.box = NULL,
# Specify panel options
panel.background = element_rect(fill = "black", color  =  NA),
panel.border = element_rect(fill = NA, color = "white"),
panel.grid.major = element_line(color = "grey35"),
panel.grid.minor = element_line(color = "grey20"),
panel.spacing = unit(0.5, "lines"),
# Specify facetting options
strip.background = element_rect(fill = "grey30", color = "grey10"),
strip.text.x = element_text(size = base_size*0.8, color = "white"),
strip.text.y = element_text(size = base_size*0.8, color = "white",angle = -90),
# Specify plot options
plot.background = element_rect(color = "black", fill = "black"),
plot.title = element_text(size = base_size*1.2, color = "white"),
plot.margin = unit(rep(1, 4), "lines")
)
}
LotVmod <- function (Time, State, Pars) {
with(as.list(c(State, Pars)), {
dx = x*(alpha - beta*y)
dy = -y*(gamma - delta*x)
return(list(c(dx, dy)))
})
}
Pars <- c(alpha = 1.01, beta = .1, gamma = .2, delta = .01)
State <- c(x = 10, y = 10)
Time <- seq(0, 100, by = 0.01)
out <- as.data.frame(ode(func = LotVmod, y = State, parms = Pars, times = Time))
names(out)[2:3]<-c("Hare", "Lynx")
melt.out<-melt(out, id=1)
names(melt.out)[2]<-"Species"
p <- ggplot(melt.out, aes(x=time, y=value, group=Species, col=Species)) +scale_color_manual(values = pal)+
geom_line() + geom_point()+theme_minimal() +theme(legend.position="top")+xlab("Time")+ylab("Abundance")+
# Here comes the gganimate code
transition_reveal(time) +
enter_fade() +
exit_shrink() +
ease_aes('sine-in-out') +theme_black()
anim<-animate(p, fps=15, height = 3000, width =8000,  res = 200)
anim_save("~/OneDrive - University of Bristol/Ecology/Chris' videos/R simlations and plots/LV Gif.gif", anim)
###then a second sim with different growth rates:
rm(list=ls())
library(deSolve)
library(reshape2)
library(ggplot2)
library(gganimate)
library(gifski)
library(png)
library(transformr)
library(gridExtra)
library(wesanderson)
pal <- wes_palette("Darjeeling1", 5, type = "discrete")[c(3,5)]
theme_black = function(base_size = 12, base_family = "") {
theme_grey(base_size = base_size, base_family = base_family) %+replace%
theme(
# Specify axis options
axis.line = element_blank(),
axis.text.x = element_text(size = base_size*0.8, color = "white", lineheight = 0.9),
axis.text.y = element_text(size = base_size*0.8, color = "white", lineheight = 0.9),
axis.ticks = element_line(color = "white", size  =  0.2),
axis.title.x = element_text(size = base_size, color = "white", margin = margin(0, 10, 0, 0)),
axis.title.y = element_text(size = base_size, color = "white", angle = 90, margin = margin(0, 10, 0, 0)),
axis.ticks.length = unit(0.3, "lines"),
# Specify legend options
legend.background = element_rect(color = NA, fill = "black"),
legend.key = element_rect(color = "white",  fill = "black"),
legend.key.size = unit(1.2, "lines"),
legend.key.height = NULL,
legend.key.width = NULL,
legend.text = element_text(size = base_size*0.8, color = "white"),
legend.title = element_text(size = base_size*0.8, face = "bold", hjust = 0, color = "white"),
legend.position = "right",
legend.text.align = NULL,
legend.title.align = NULL,
legend.direction = "vertical",
legend.box = NULL,
# Specify panel options
panel.background = element_rect(fill = "black", color  =  NA),
panel.border = element_rect(fill = NA, color = "white"),
panel.grid.major = element_line(color = "grey35"),
panel.grid.minor = element_line(color = "grey20"),
panel.spacing = unit(0.5, "lines"),
# Specify facetting options
strip.background = element_rect(fill = "grey30", color = "grey10"),
strip.text.x = element_text(size = base_size*0.8, color = "white"),
strip.text.y = element_text(size = base_size*0.8, color = "white",angle = -90),
# Specify plot options
plot.background = element_rect(color = "black", fill = "black"),
plot.title = element_text(size = base_size*1.2, color = "white"),
plot.margin = unit(rep(1, 4), "lines")
)
}
LotVmod <- function (Time, State, Pars) {
with(as.list(c(State, Pars)), {
dx = x*(alpha - beta*y)
dy = -y*(gamma - delta*x)
return(list(c(dx, dy)))
})
}
Pars <- c(alpha = .95, beta = .1, gamma = .2, delta = .01)
State <- c(x = 10, y = 10)
Time <- seq(0, 100, by = 0.01)
out <- as.data.frame(ode(func = LotVmod, y = State, parms = Pars, times = Time))
names(out)[2:3]<-c("Hare", "Lynx")
melt.out<-melt(out, id=1)
names(melt.out)[2]<-"Species"
p <- ggplot(melt.out, aes(x=time, y=value, group=Species, col=Species)) +scale_color_manual(values = pal)+
geom_line() + geom_point()+theme_minimal() +theme(legend.position="top")+xlab("Time")+ylab("Abundance")+
# Here comes the gganimate code
transition_reveal(time) +
enter_fade() +
exit_shrink() +
ease_aes('sine-in-out') +theme_black()
anim<-animate(p, fps=15, height = 3000, width =8000,  res = 200)
anim_save("~/OneDrive - University of Bristol/Ecology/Chris' videos/R simlations and plots/LV Gif slow.gif", anim)
library(devtools)
devtools::install_github("Exp-Micro-Ecol-Hub/emeScheme", ref = "master", build_opts = c("--no-resave-data"))
devtools::install_github("Exp-Micro-Ecol-Hub/dmdScheme", ref = "master", build_opts = c("--no-resave-data"))
devtools::install_github("Exp-Micro-Ecol-Hub/emeScheme", ref = "master", build_opts = c("--no-resave-data"))
library(dmdScheme)
library(emeScheme)
open_new_spreadsheet()
open_new_spreadsheet(keepData=T)
open_new_spreadsheet(keepData=T, format=F)
report("EXP 1 meta.xlsx", "~/Desktop/Work/Experimental-data/Clements et al. (2013) JAE", report = "html")
report("EXP 1 meta.xlsx", "~/Desktop/Work/Experimental-data/Clements et al. (2013) JAE/", report = "html")
report("EXP 1 meta.xlsx", "~/Desktop/Work/Experimental-data/Clements et al. (2013) JAE/", report = "html")
## eme scheme trial 2
rm(list=ls())
library(devtools)
##install various packages
##devtools::install_github("Exp-Micro-Ecol-Hub/dmdScheme", ref = "master", build_opts = c("--no-resave-data"))
##devtools::install_github("Exp-Micro-Ecol-Hub/emeScheme", ref = "master", build_opts = c("--no-resave-data"))
devtools::install_github("Exp-Micro-Ecol-Hub/dmdScheme", ref = "prepareReleaseCRAN", build_opts = c("--no-resave-data"))
library(dmdScheme)
##set wd
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
read_excel("EXP 1 meta.xlsx", validate = T)
library(emeScheme)
read_excel("EXP 1 meta.xlsx", validate = T)
validate("EXP 1 meta.xlsx", errorIfStructFalse=F)
validate("EXP 1 meta.xlsx")
scheme_make("EXP 1 meta.xlsx", overwrite=T)
## eme scheme trial 2
rm(list=ls())
library(devtools)
##install various packages
##devtools::install_github("Exp-Micro-Ecol-Hub/dmdScheme", ref = "master", build_opts = c("--no-resave-data"))
##devtools::install_github("Exp-Micro-Ecol-Hub/emeScheme", ref = "master", build_opts = c("--no-resave-data"))
devtools::install_github("Exp-Micro-Ecol-Hub/dmdScheme", ref = "prepareReleaseCRAN", build_opts = c("--no-resave-data"))
library(dmdScheme)
scheme_make("EXP 1 meta.xlsx", overwrite=T)
library(emeScheme)
make_example("basic")
report('EXP 1 meta.xlsx', '~/Desktop/Work/Experimental-data/Clements et al. (2013) JAE', report = "html", errorIfStructFalse=F)
